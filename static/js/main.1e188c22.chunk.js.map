{"version":3,"sources":["img-placeholder.png","index.js"],"names":["EXAMPLE_MOVIES","ExampleMovies","movies","BASE_API_URI","Search","props","state","searchBarContainerClassName","isEmpty","queryURI","isSubmitted","randomMovieIndex","Math","floor","random","length","exampleMovie","handleChange","bind","handleSubmit","className","this","onSubmit","htmlFor","placeholder","onChange","value","query","event","quri","target","trim","split","join","setState","preventDefault","searchURI","console","log","React","Component","Result","titleStyles","wasClicked","titleStyle","handleOnClick","handleOnMouseOver","handleOnMouseOut","resultHTML","onClick","onMouseOver","onMouseOut","title","year","img","type","imdbID","src","PlaceholderImage","alt","ResultsList","resultsURI","currentPage","showMorePageIterator","fulfilled","status","results","totalResults","data","selected","pageURI","getResults","URI","fetch","then","res","json","Response","Error","concat","error","onResults","pagesFromCurrent","containerClassName","pageCount","ceil","pageRangeDisplayed","marginPagesDisplayed","onPageChange","goToPage","map","result","Poster","Title","Type","Year","showMore","pagesRemaining","Details","fetchAdditionalDetails","details","updateValuesToDisplay","Date","now","undefined","Released","months","dateSplit","day","month","indexOf","date","Plot","Actors","Production","imdbRating","Genre","Rated","Runtime","Country","Language","toLocaleDateString","id","ShowMore","buttonStyles","buttonStyle","SearchApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1e188c22.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/img-placeholder.f9c8df69.png\";","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactPaginate from 'react-paginate';\r\nimport PlaceholderImage from './img-placeholder.png';\r\nimport ExampleMovies from './example-movies.json'\r\nimport './style1.css';\r\n\r\nconst EXAMPLE_MOVIES = ExampleMovies.movies;\r\nconst BASE_API_URI = 'https://www.omdbapi.com/?apikey=dc24cbd7&type=movie';\r\n\r\nclass Search extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            searchBarContainerClassName: 'search-bar-container',\r\n            isEmpty: true,\r\n            queryURI: '',\r\n            isSubmitted: false\r\n        };\r\n\r\n        let randomMovieIndex = Math.floor(Math.random() * EXAMPLE_MOVIES.length);\r\n\r\n        this.exampleMovie = EXAMPLE_MOVIES[randomMovieIndex];\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.state.searchBarContainerClassName}>\r\n                <div className='search-bar'>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <label htmlFor='search-query'>\r\n                            Movie Search\r\n                        </label>\r\n                        <br>\r\n                        </br>\r\n                        <input\r\n                            placeholder={this.exampleMovie}\r\n                            onChange={this.handleChange}\r\n                            value={this.state.query}\r\n                        />\r\n                        <button>\r\n                            Search\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    //user typing updates query params for api\r\n    handleChange(event) {\r\n        let quri = BASE_API_URI\r\n            + '&s=' + event.target.value.trim().split(' ').join('+')\r\n            + \"&page=1\";\r\n\r\n        this.setState({\r\n            isEmpty: event.target.value.trim().length === 0,\r\n            queryURI: quri\r\n        });\r\n    }\r\n\r\n    //request on submit\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        const searchURI = this.state.queryURI;\r\n\r\n        //get JSON from api using searchURI, parse and fill\r\n        if (!this.state.isEmpty && this.props.onSubmit) {\r\n            this.props.onSubmit(searchURI);\r\n            console.log('passed uri using props function');\r\n            this.setState({\r\n                searchBarContainerClassName: 'search-bar-container-with-results'\r\n            });\r\n        }\r\n        console.log(searchURI);\r\n    }\r\n}\r\n\r\nclass Result extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.titleStyles = [\"result-title-no-details\", \"result-title-no-details-hovering\"]\r\n\r\n        this.state = {\r\n            wasClicked: false,\r\n            titleStyle: 0  //for tracking style of title when hovering\r\n        };\r\n        this.handleOnClick = this.handleOnClick.bind(this);\r\n        this.handleOnMouseOver = this.handleOnMouseOver.bind(this);\r\n        this.handleOnMouseOut = this.handleOnMouseOut.bind(this);\r\n    }\r\n\r\n    handleOnClick(event) {\r\n        event.preventDefault();\r\n        this.setState({\r\n            wasClicked: true\r\n        });\r\n    }\r\n\r\n    handleOnMouseOver(event) {\r\n        this.setState({\r\n            titleStyle: 1\r\n        });\r\n    }\r\n\r\n    handleOnMouseOut(event) {\r\n        this.setState({\r\n            titleStyle: 0\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let resultHTML = (\r\n            <div className=\"result-no-details-container\">\r\n                <div\r\n                    className=\"result-no-details\"\r\n                    onClick={this.handleOnClick}\r\n                >\r\n                    <div className=\"result-title-no-details-container\">\r\n                        <button\r\n                            className={this.titleStyles[this.state.titleStyle]}\r\n                            onMouseOver={this.handleOnMouseOver}\r\n                            onMouseOut={this.handleOnMouseOut}\r\n                        >\r\n                            {this.props.title}\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"result-info-no-details-container\">\r\n                        <p className=\"result-info-no-details\">\r\n                            ({this.props.year})\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        if (this.state.wasClicked === true) {\r\n            //was clicked, create details component and show details\r\n            resultHTML = (\r\n                <div className='result' onClick={this.handleOnClick}>\r\n                    <div className='result-info'>\r\n                        <div className='result-title-container'>\r\n                            <div className='result-title'>\r\n                                <p>{this.props.title}</p>\r\n                            </div>\r\n                            <div className='result-year'>\r\n                                <p>({this.props.year})</p>\r\n                            </div>\r\n                        </div>\r\n                        {\r\n                            //create Details Component once clicked\r\n                            this.state.wasClicked\r\n                            &&\r\n                            <Details\r\n                                img={this.props.img}\r\n                                title={this.props.title}\r\n                                type={this.props.type}\r\n                                year={this.props.year}\r\n                                imdbID={this.props.imdbID}\r\n                            />\r\n                        }\r\n                    </div>\r\n                    <div className='result-img-container'>\r\n                        {(this.props.img === 'N/A') ? (\r\n                            <img\r\n                                className='result-img'\r\n                                src={PlaceholderImage}\r\n                                alt='Movie Poster PlaceHolder'\r\n                            />\r\n                        ) : (\r\n                            <img\r\n                                className='result-img'\r\n                                src={this.props.img}\r\n                                alt='Movie Poster'\r\n                            />\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            resultHTML\r\n        );\r\n    }\r\n}\r\n\r\nclass ResultsList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            resultsURI: '',\r\n            currentPage: 1,\r\n            showMorePageIterator: 0, //page offset from initial after showing \r\n            fulfilled: false,                                   //more results\r\n            status: null,  // 'true' or 'false' for results of api fetch\r\n            results: [],\r\n            totalResults: 0\r\n        }\r\n    }\r\n\r\n    goToPage(data) {\r\n        console.log(data);\r\n        let selected = data.selected + 1;\r\n        console.log('gotopage' + this.state.resultsURI);\r\n\r\n        let baseURI = this.state.resultsURI.split('&page=')[0];\r\n        let pageParam = `&page=${selected}`;\r\n        let pageURI = baseURI + pageParam;\r\n        console.log('pageURI' + pageURI);\r\n\r\n        this.setState({\r\n            currentPage: selected,\r\n            results: []     //result list (show as new page)\r\n        });\r\n\r\n        console.log(pageURI);\r\n        this.getResults(pageURI);\r\n    }\r\n\r\n    getResults(URI) {\r\n        console.log('getting results for list');\r\n        console.log(URI);\r\n        fetch(URI)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data);\r\n\r\n                if (data.Response === 'False') {\r\n                    this.setState({\r\n                        fulfilled: false,\r\n                        status: data.Error,\r\n                        totalResults: 0,\r\n                    });\r\n                } else {\r\n                    this.setState({\r\n                        fulfilled: true,\r\n                        status: 'Showing Results:',\r\n                        results: this.state.results.concat(data.Search),\r\n                        totalResults: data.totalResults,\r\n                        resultsURI: URI\r\n                    });\r\n                }\r\n            },\r\n                (error) => {\r\n                    console.log(error)\r\n                }\r\n            );\r\n    }\r\n\r\n    onResults() {\r\n        if (this.state.fulfilled && this.props.onResults) {\r\n            this.props.onResults(this.state.fulfilled);\r\n            console.log('Changed CSS file!');\r\n        }\r\n    }\r\n\r\n    showMore() {\r\n        console.log(\"Showing more\");\r\n        console.log(this.state);\r\n        //will concatenate results list without resetting like this.goToPage()\r\n        console.log(this.state.resultsURI);\r\n\r\n\r\n        let pagesFromCurrent = this.state.showMorePageIterator + 1\r\n        this.setState({\r\n            showMorePageIterator: pagesFromCurrent\r\n        })\r\n\r\n        console.log(pagesFromCurrent + \":\" + this.state.showMorePageIterator);\r\n\r\n        let baseURI = this.state.resultsURI.split('&page=')[0];\r\n        let pageParam = \"&page=\" + this.state.currentPage + this.state.showMorePageIterator;\r\n        let pageURI = baseURI + pageParam;\r\n        console.log(pageURI);\r\n        this.getResults(pageURI);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className='search-header'>\r\n                    <Search\r\n                        onSubmit={queryURI => this.getResults(queryURI)}\r\n                    />\r\n                    {this.state.fulfilled === true &&\r\n                        <div className='paginate-container'>\r\n                            <ReactPaginate\r\n                                containerClassName='pagination'\r\n                                pageCount={Math.ceil(this.state.totalResults / 10)}\r\n                                pageRangeDisplayed={5}\r\n                                marginPagesDisplayed={2}\r\n                                onPageChange={this.goToPage}\r\n                            />\r\n                        </div>}\r\n                </div>\r\n                <div className='results-status-container'>\r\n                    {this.state.fulfilled !== true && <h3 className='results-status'>{this.state.status}</h3>}\r\n                </div>\r\n                {(this.state.fulfilled === true) && (\r\n                    this.state.results.map((result) => (\r\n                        <div key={result.imdbID}>\r\n                            <Result\r\n                                img={result.Poster}\r\n                                title={result.Title}\r\n                                type={result.Type}\r\n                                year={result.Year}\r\n                                imdbID={result.imdbID}\r\n                            />\r\n                        </div>\r\n                    ))\r\n                )}\r\n                {(this.state.fulfilled === true) && (\r\n                    <ShowMore\r\n                        onClick={this.showMore.bind(this)}\r\n                        pagesRemaining={\r\n                            Math.ceil(this.state.totalResults / 10) - this.state.currentPage\r\n                        }\r\n                    />\r\n                )}\r\n                {this.state.fulfilled === true &&\r\n                    <div className='paginate-container'>\r\n                        <ReactPaginate\r\n                            containerClassName='pagination'\r\n                            pageCount={Math.ceil(this.state.totalResults / 10)}\r\n                            pageRangeDisplayed={5}\r\n                            marginPagesDisplayed={2}\r\n                            onPageChange={this.goToPage}\r\n                        />\r\n                    </div>}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Details extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = ({\r\n            status: 'false',    // 'false', 'loading', or 'true'\r\n            data: {}\r\n        });\r\n\r\n        //get details upon construction (when parent is clicked)\r\n        this.fetchAdditionalDetails();\r\n    }\r\n\r\n    fetchAdditionalDetails() {\r\n        console.log('getting details for ' + this.props.title);\r\n        fetch(BASE_API_URI + '&i=' + this.props.imdbID)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data);\r\n\r\n                if (data.Response === 'false') {\r\n                    this.setState({\r\n                        status: 'error',\r\n                        details: {}\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        status: 'loading',\r\n                        details: data\r\n                    })\r\n                    //format values to user friendly formats\r\n                    this.updateValuesToDisplay();\r\n                    console.log('Details Obtained ' + Date.now());\r\n                }\r\n            },\r\n                (error) => {\r\n                    console.log(error)\r\n                }\r\n            );\r\n    }\r\n\r\n    updateValuesToDisplay() {\r\n        //setup date fetched from api for locale of user \r\n        let data = this.state.details;\r\n\r\n        console.log(this.state.details);\r\n        if (this.state.details === undefined) {\r\n            console.error('DETAILS IS UNDEFINED!');\r\n        } else {\r\n            if (this.state.details.Released !== 'N/A') {\r\n                var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n                var dateSplit = this.state.details.Released.split(' ');\r\n                var day = dateSplit[0];\r\n                console.log(dateSplit);\r\n                var month = (months.indexOf(dateSplit[1]) + 1 >= 10) ? (months.indexOf(dateSplit[1])) : ('0' + months.indexOf(dateSplit[1]));\r\n                var year = dateSplit[2];\r\n                var date = new Date(`${year}-${month}-${day}`);\r\n            }\r\n\r\n            //handle any missing info from api \"N/A\"\r\n            console.log('r: ' + this.state.details.Released);\r\n            data.Plot = this.state.details.Plot !== 'N/A' ? this.state.details.Plot : '';\r\n            data.Actors = this.state.details.Actors !== 'N/A' ? this.state.details.Actors : '--';\r\n            data.Production = this.state.details.Production !== 'N/A' ? this.state.details.Production : '--';\r\n            data.imdbRating = this.state.details.imdbRating !== 'N/A' ? this.state.details.imdbRating : '--';\r\n            data.Genre = this.state.details.Genre !== 'N/A' ? this.state.details.Genre : '--';\r\n            data.Rated = this.state.details.Rated !== 'N/A' ? this.state.details.Rated : '--';\r\n            data.Runtime = this.state.details.Runtime !== 'N/A' ? this.state.details.Runtime : '--';\r\n            data.Country = this.state.details.Country !== 'N/A' ? this.state.details.Country : '--';\r\n            data.Language = this.state.details.Language !== 'N/A' ? this.state.details.Language : '--';\r\n            data.Released = this.state.details.Released !== 'N/A' ? date.toLocaleDateString() : '--';\r\n\r\n            this.setState({\r\n                status: 'true',\r\n                details: data\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log('details render');\r\n        let detailHTML;\r\n\r\n        //successful fetch of details, show them\r\n        if (this.state.status === 'true') {\r\n            detailHTML = (\r\n                <div className='details-container'>\r\n                    <div className='details-top'>\r\n                        <p className='plot' id='plot'>\r\n                            {this.state.details.Plot}\r\n                        </p>\r\n                    </div>\r\n                    <div className='details-bottom'>\r\n                        <ul className='details-list'>\r\n                            <li><p className='detail-label'>Actors: </p><p>{this.state.details.Actors}</p></li>\r\n                            <li><p className='detail-label'>Studios: </p><p>{this.state.details.Production}</p></li>\r\n                            <li><p className='detail-label'>Premiered: </p><p>{this.state.details.Released}</p></li>\r\n                            <li><p className='detail-label'>IMDB Rating: </p><p>{this.state.details.imdbRating}</p></li>\r\n                            <li><p className='detail-label'>Genre: </p><p>{this.state.details.Genre}</p></li>\r\n                            <li><p className='detail-label'>Rating: </p><p>{this.state.details.Rated}</p></li>\r\n                            <li><p className='detail-label'>Length: </p><p>{this.state.details.Runtime}</p></li>\r\n                            <li><p className='detail-label'>Country: </p><p>{this.state.details.Country}</p></li>\r\n                            <li><p className='detail-label'>Language: </p><p>{this.state.details.Language}</p></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else if ('loading') {\r\n            detailHTML = (\r\n                <div className='details-container'>\r\n                    <p className='details-loading'>\r\n                        Fetching details...\r\n                    </p>\r\n                </div>\r\n            );\r\n        } else {    //error\r\n            detailHTML = (\r\n                <div className='details-container'>\r\n                    <p className='details-error'>\r\n                        Something went wrong!\r\n                    </p>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return detailHTML;\r\n    }\r\n}\r\n\r\nclass ShowMore extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.buttonStyles = [\"show-more\", \"show-more-hovering\"];\r\n\r\n        this.state = {\r\n            pagesRemaining: this.props.pagesRemaining,\r\n            buttonStyle: 0\r\n        };\r\n        this.handleOnClick = this.handleOnClick.bind(this);\r\n        this.handleOnMouseOver = this.handleOnMouseOver.bind(this);\r\n        this.handleOnMouseOut = this.handleOnMouseOut.bind(this);\r\n    }\r\n\r\n    handleOnClick(event) {\r\n        if (this.props.onClick) {\r\n            this.props.onClick(event);\r\n        }\r\n    }\r\n\r\n    handleOnMouseOver(event) {\r\n        this.setState({\r\n            buttonStyle: 1\r\n        });\r\n    }\r\n\r\n    handleOnMouseOut(event) {\r\n        this.setState({\r\n            buttonStyle: 0\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"show-more-container\">\r\n                <button className={this.buttonStyles[this.state.buttonStyle]} id=\"show-more\"\r\n                    onClick={this.handleOnClick}\r\n                    onMouseOver={this.handleOnMouseOver}\r\n                    onMouseOut={this.handleOnMouseOut}\r\n                >\r\n                    🠗 Show More Results 🠗\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction SearchApp() {\r\n    return (\r\n        <div>\r\n            <ResultsList >\r\n            </ResultsList>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nReactDOM.render(<SearchApp />, document.getElementById('root'));\r\n"],"sourceRoot":""}