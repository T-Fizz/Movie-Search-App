{"version":3,"sources":["img-placeholder.png","index.js"],"names":["BASE_API_URI","Search","props","state","searchBarContainerClassName","isEmpty","queryURI","isSubmitted","handleChange","bind","handleSubmit","className","this","onSubmit","htmlFor","placeholder","onChange","value","query","event","setState","target","trim","length","split","join","preventDefault","searchURI","console","log","React","Component","Result","status","wasClicked","details","detailsFulfilled","handleOnClick","title","fetch","imdbID","then","res","json","data","Response","updateValuesToDisplay","Date","now","error","undefined","Released","months","dateSplit","day","month","indexOf","year","date","plot","Plot","actors","Actors","production","Production","rating","imdbRating","genre","Genre","rated","Rated","Runtime","country","Country","language","Language","release","toLocaleDateString","fetchAdditionalDetails","forceUpdate","detailHTML","id","onClick","img","src","PlaceholderImage","alt","ResultsList","goToPage","selected","resultsURI","pageURI","currentPage","getResults","fulfilled","results","totalResults","URI","Error","onResults","containerClassName","pageCount","Math","ceil","pageRangeDisplayed","marginPagesDisplayed","onPageChange","map","result","Poster","Title","type","Type","Year","SearchApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f50b2c57.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/img-placeholder.f9c8df69.png\";","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactPaginate from 'react-paginate';\r\nimport PlaceholderImage from './img-placeholder.png';\r\nimport './style1.css';\r\nimport './style2.css';\r\n\r\nconst BASE_API_URI = \"https://www.omdbapi.com/?apikey=dc24cbd7&type=movie\";\r\n\r\nclass Search extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            searchBarContainerClassName: \"search-bar-container\",\r\n            isEmpty: true,\r\n            queryURI: '',\r\n            isSubmitted: false\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.state.searchBarContainerClassName}>\r\n                <div className=\"search-bar\">\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <label htmlFor=\"search-query\">\r\n                            Movie Search\r\n                        </label>\r\n                        <br>\r\n                        </br>\r\n                        <input\r\n                            placeholder=\"The Wizard of Oz\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.query}\r\n                        />\r\n                        <button>\r\n                            Search\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    //user typing updates query params for api\r\n    handleChange(event) {\r\n        this.setState({\r\n            isEmpty: event.target.value.trim().length === 0,\r\n            queryURI: BASE_API_URI + \"&s=\" + event.target.value.trim().split(' ').join('+')\r\n        });\r\n    }\r\n\r\n    //request on submit\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        const searchURI = this.state.queryURI;\r\n\r\n        //get JSON from api using searchURI, parse and fill\r\n        if (!this.state.isEmpty && this.props.onSubmit) {\r\n            this.props.onSubmit(searchURI);\r\n            console.log(\"passed uri using props function\");\r\n            this.setState({\r\n                searchBarContainerClassName: \"search-bar-container-with-results\"\r\n            })\r\n        }\r\n        console.log(searchURI);\r\n    }\r\n}\r\n\r\n\r\nclass Result extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            status: \"false\",\r\n            wasClicked: false,\r\n            details: {},\r\n            detailsFulfilled: false\r\n        }\r\n        this.handleOnClick = this.handleOnClick.bind(this);\r\n    }\r\n\r\n    fetchAdditionalDetails() {\r\n        console.log(\"getting details for \" + this.props.title);\r\n        fetch(BASE_API_URI + \"&i=\" + this.props.imdbID)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data);\r\n\r\n                if (data.Response === \"False\") {\r\n                    this.setState({\r\n                        status: \"error\",\r\n                        detailsFulfilled: false,\r\n                        details: {}\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        status: \"true\",\r\n                        detailsFulfilled: true,\r\n                        details: data\r\n                    })\r\n                    this.updateValuesToDisplay();\r\n                    console.log(\"Details Obtained \" + Date.now());\r\n                }\r\n            },\r\n                (error) => {\r\n                    console.log(error)\r\n                }\r\n            );\r\n\r\n        //\r\n    }\r\n\r\n    updateValuesToDisplay() {\r\n        //setup date fetched from api for locale of user \r\n        var data = this.state.details;\r\n\r\n        console.log(this.state.details);\r\n        if (this.state.details === undefined) {\r\n            console.error(\"DETAILS IS UNDEFINED!\");\r\n        } else {\r\n            if (this.state.details.Released !== \"N/A\") {\r\n                var months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n                var dateSplit = this.state.details.Released.split(' ');\r\n                var day = dateSplit[0];\r\n                console.log(dateSplit);\r\n                var month = (months.indexOf(dateSplit[1]) + 1 >= 10) ? (months.indexOf(dateSplit[1])) : (\"0\" + months.indexOf(dateSplit[1]));\r\n                var year = dateSplit[2];\r\n                var date = new Date(`${year}-${month}-${day}`);\r\n            }\r\n\r\n            console.log(\"r: \" + this.state.details.Released);\r\n            var plot = this.state.details.Plot !== \"N/A\" ? this.state.details.Plot : \"unknown\";\r\n            var actors = this.state.details.Actors !== \"N/A\" ? this.state.details.Actors : \"unknown\";\r\n            var production = this.state.details.Production !== \"N/A\" ? this.state.details.Production : \"unknown\";\r\n            var rating = this.state.details.imdbRating !== \"N/A\" ? this.state.details.imdbRating : \"unknown\";\r\n            var genre = this.state.details.Genre !== \"N/A\" ? this.state.details.Genre : \"unknown\";\r\n            var rated = this.state.details.Rated !== \"N/A\" ? this.state.details.Rated : \"unknown\";\r\n            var length = this.state.details.Runtime !== \"N/A\" ? this.state.details.Runtime : \"unknown\";\r\n            var country = this.state.details.Country !== \"N/A\" ? this.state.details.Country : \"unknown\";\r\n            var language = this.state.details.Language !== \"N/A\" ? this.state.details.Language : \"unknown\";\r\n            var release = this.state.details.Released !== \"N/A\" ? date.toLocaleDateString() : \"unknown\";\r\n\r\n            data.Plot = plot;\r\n            data.Actors = actors;\r\n            data.Production = production;\r\n            data.imdbRating = rating;\r\n            data.Genre = genre;\r\n            data.Rated = rated;\r\n            data.Runtime = length;\r\n            data.Country = country;\r\n            data.Language = language;\r\n            data.Released = release;\r\n\r\n            this.setState({\r\n                details: data\r\n            });\r\n        }\r\n    }\r\n\r\n    handleOnClick(event) {\r\n        event.preventDefault();\r\n        this.fetchAdditionalDetails();\r\n        //this.updateValuesToDisplay();\r\n        this.setState({\r\n            wasClicked: true\r\n        })\r\n        this.forceUpdate();\r\n    }\r\n\r\n    render() {\r\n        console.log(\"details render\");\r\n        let detailHTML;\r\n        //details panel that requires another API request \r\n\r\n        if (this.state.status === \"true\" && this.state.detailsFulfilled === true) {\r\n            detailHTML = (\r\n                <div className=\"details-container\">\r\n                    <div className=\"details-top\">\r\n                        <p className=\"plot\" id=\"plot\">\r\n                            {this.state.details.Plot}\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"details-bottom\">\r\n                        <ul className=\"details-list\">\r\n                            <li><p className=\"detail-label\">Actors: </p><p>{this.state.details.Actors}</p></li>\r\n                            <li><p className=\"detail-label\">Studios: </p><p>{this.state.details.Production}</p></li>\r\n                            <li><p className=\"detail-label\">Premiered: </p><p>{this.state.details.Released}</p></li>\r\n                            <li><p className=\"detail-label\">IMDB Rating: </p><p>{this.state.details.imdbRating}</p></li>\r\n                            <li><p className=\"detail-label\">Genre: </p><p>{this.state.details.Genre}</p></li>\r\n                            <li><p className=\"detail-label\">Rating: </p><p>{this.state.details.Rated}</p></li>\r\n                            <li><p className=\"detail-label\">Length: </p><p>{this.state.details.Runtime}</p></li>\r\n                            <li><p className=\"detail-label\">Country: </p><p>{this.state.details.Country}</p></li>\r\n                            <li><p className=\"detail-label\">Language: </p><p>{this.state.details.Language}</p></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else if (this.state.status === \"false\") {\r\n            detailHTML = (\r\n                <div className=\"details-bottom\">\r\n                    <p className=\"details-not-clicked\">Click panel to show more!</p>\r\n                </div>\r\n            )\r\n        } else {    //error\r\n            detailHTML = (\r\n                <div className=\"details-container\">\r\n                    <p className=\"details-error\">\r\n                        Something went wrong!\r\n                    </p>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div className=\"result\" onClick={this.handleOnClick}>\r\n                <div className=\"result-info\">\r\n                    <div className=\"result-title-container\">\r\n                        <div className=\"result-title\">\r\n                            <p>{this.props.title}</p>\r\n                        </div>\r\n                        <div className=\"result-year\">\r\n                            <p>({this.props.year})</p>\r\n                        </div>\r\n                    </div>\r\n                    {detailHTML}\r\n                </div>\r\n                <div className=\"result-img-container\">\r\n                    {(this.props.img === \"N/A\") ? (\r\n                        <img className=\"result-img\" src={PlaceholderImage} alt=\"Movie Poster PlaceHolder\" />\r\n                    ) : (\r\n                        <img className=\"result-img\" src={this.props.img} alt=\"Movie Poster\" />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass ResultsList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            resultsURI: \"\",\r\n            currentPage: 1,\r\n            fulfilled: false,\r\n            status: null,\r\n            results: [],\r\n            totalResults: 0\r\n        }\r\n    }\r\n\r\n    goToPage = (data) => {\r\n        console.log(data);\r\n        var selected = data.selected + 1;\r\n        console.log(\"gotopage\" + this.state.resultsURI);\r\n\r\n        var baseURI = this.state.resultsURI.split(\"&page=\")[0];\r\n        var pageParam = `&page=${selected}`;\r\n        var pageURI = baseURI + pageParam;\r\n        console.log(\"pageURI\" + pageURI);\r\n\r\n        this.setState({\r\n            currentPage: selected\r\n        });\r\n\r\n        console.log(pageURI);\r\n        this.getResults(pageURI);\r\n    }\r\n\r\n    getResults(URI) {\r\n        console.log(\"getting results for list\");\r\n        console.log(URI);\r\n        fetch(URI)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data);\r\n\r\n                if (data.Response === \"False\") {\r\n                    this.setState({\r\n                        fulfilled: false,\r\n                        status: data.Error,\r\n                        results: [],\r\n                        totalResults: 0,\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        fulfilled: true,\r\n                        status: \"Showing Results:\",\r\n                        results: data.Search,\r\n                        totalResults: data.totalResults,\r\n                        resultsURI: URI\r\n                    })\r\n                }\r\n            },\r\n                (error) => {\r\n                    console.log(error)\r\n                }\r\n            );\r\n    }\r\n\r\n    onResults() {\r\n        if (this.state.fulfilled && this.props.onResults) {\r\n            this.props.onResults(this.state.fulfilled);\r\n            console.log(\"Changed CSS file!\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"search-header\">\r\n                    <Search\r\n                        onSubmit={queryURI => this.getResults(queryURI)}\r\n                    />\r\n                    {this.state.fulfilled === true &&\r\n                        <div className=\"paginate-container\">\r\n                            <ReactPaginate\r\n                                containerClassName=\"pagination\"\r\n                                pageCount={Math.ceil(this.state.totalResults / 10)}\r\n                                pageRangeDisplayed={5}\r\n                                marginPagesDisplayed={2}\r\n                                onPageChange={this.goToPage}\r\n                            />\r\n                        </div>}\r\n                </div>\r\n                <div className=\"results-status-container\">\r\n                    {this.state.fulfilled !== true && <h3 className=\"results-status\">{this.state.status}</h3>}\r\n                </div>\r\n                {(this.state.fulfilled === true) && (\r\n                    this.state.results.map((result) => (\r\n                        <div key={result.imdbID}>\r\n                            <Result\r\n                                img={result.Poster}\r\n                                title={result.Title}\r\n                                type={result.Type}\r\n                                year={result.Year}\r\n                                imdbID={result.imdbID}\r\n                            />\r\n                        </div>\r\n                    ))\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass ShowMore extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n}\r\n\r\nfunction SearchApp() {\r\n    return (\r\n        <div>\r\n            <ResultsList >\r\n            </ResultsList>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nReactDOM.render(<SearchApp />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}