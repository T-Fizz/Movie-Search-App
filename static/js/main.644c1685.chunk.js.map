{"version":3,"sources":["img-placeholder.png","index.js"],"names":["BASE_API_URI","Search","props","state","searchBarContainerClassName","isEmpty","queryURI","isSubmitted","handleChange","bind","handleSubmit","className","this","onSubmit","htmlFor","placeholder","onChange","value","query","event","setState","target","trim","length","split","join","preventDefault","searchURI","console","log","React","Component","Result","status","wasClicked","details","detailsFulfilled","handleOnClick","title","fetch","imdbID","then","res","json","data","Response","Date","now","error","fetchAdditionalDetails","detailHTML","id","plot","Actors","Production","Release","imdbRating","Genre","Rated","Runtime","Country","Language","onClick","year","img","src","PlaceholderImage","alt","ResultsList","goToPage","selected","resultsURI","pageURI","currentPage","getResults","fulfilled","results","totalResults","URI","Error","onResults","containerClassName","pageCount","Math","ceil","pageRangeDisplayed","marginPagesDisplayed","onPageChange","map","result","Poster","Title","type","Type","Year","SearchApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.644c1685.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/img-placeholder.f9c8df69.png\";","import { render, waitFor } from '@testing-library/react';\r\nimport React from 'react';\r\nimport reactDom from 'react-dom';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactPaginate from 'react-paginate';\r\nimport PlaceholderImage from './img-placeholder.png';\r\nimport './style1.css';\r\nimport './style2.css';\r\n\r\nconst BASE_API_URI = \"https://www.omdbapi.com/?apikey=dc24cbd7\";\r\n\r\nclass Search extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            searchBarContainerClassName: \"search-bar-container\",\r\n            isEmpty: true,\r\n            queryURI: '',\r\n            isSubmitted: false\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.state.searchBarContainerClassName}>\r\n                <div className=\"search-bar\">\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <label htmlFor=\"search-query\">\r\n                            Movie Search\r\n                        </label>\r\n                        <br>\r\n                        </br>\r\n                        <input\r\n                            placeholder=\"The Wizard of Oz\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.query}\r\n                        />\r\n                        <button>\r\n                            Search\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    //user typing updates query params for api\r\n    handleChange(event) {\r\n        this.setState({\r\n            isEmpty: event.target.value.trim().length === 0,\r\n            queryURI: BASE_API_URI + \"&s=\" + event.target.value.trim().split(' ').join('+')\r\n        });\r\n    }\r\n\r\n    //request on submit\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        const searchURI = this.state.queryURI;\r\n\r\n        //get JSON from api using searchURI, parse and fill\r\n        if (!this.state.isEmpty && this.props.onSubmit) {\r\n            this.props.onSubmit(searchURI);\r\n            console.log(\"passed uri using props function\");\r\n            this.setState({\r\n                searchBarContainerClassName: \"search-bar-container-with-results\"\r\n            })\r\n        }\r\n        console.log(searchURI);\r\n    }\r\n}\r\n\r\nclass Result extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            status: \"false\",\r\n            wasClicked: false,\r\n            details: {},\r\n            detailsFulfilled: false\r\n        }\r\n        this.handleOnClick = this.handleOnClick.bind(this);\r\n    }\r\n\r\n    fetchAdditionalDetails() {\r\n        console.log(\"getting details for \" + this.props.title);\r\n        fetch(BASE_API_URI + \"&i=\" + this.props.imdbID)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data);\r\n\r\n                if (data.Response === \"False\") {\r\n                    this.setState({\r\n                        status: \"error\",\r\n                        detailsFulfilled: false,\r\n                        details: {}\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        status: \"true\",\r\n                        detailsFulfilled: true,\r\n                        details: data\r\n                    })\r\n                    console.log(\"Details Obtained \" + Date.now());\r\n                }\r\n            },\r\n                (error) => {\r\n                    console.log(error)\r\n                }\r\n            );\r\n\r\n        //\r\n    }\r\n\r\n    handleOnClick(event) {\r\n        event.preventDefault();\r\n        this.fetchAdditionalDetails();\r\n        this.setState({\r\n            wasClicked: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let detailHTML;\r\n        //details panel that requires another API request \r\n        if (this.state.status === \"false\") {\r\n            detailHTML = (\r\n                <div className=\"details-bottom\">\r\n                    <p className=\"details-not-clicked\">Click panel to show more!</p>\r\n                </div>\r\n            )\r\n        } else if (this.state.status === \"true\") {\r\n            detailHTML = (\r\n                <div className=\"details-container\">\r\n                    <div className=\"details-top\">\r\n                        <p className=\"plot\" id=\"plot\">\r\n                            {this.plot}\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"details-bottom\">\r\n                        <ul className=\"details-list\">\r\n                            <li><p className=\"detail-label\">Actors: </p><p>{this.state.details.Actors}</p></li>\r\n                            <li><p className=\"detail-label\">Studios: </p><p>{this.state.details.Production}</p></li>\r\n                            <li><p className=\"detail-label\">Premiered: </p><p>{this.state.details.Release}</p></li>\r\n                            <li><p className=\"detail-label\">IMDB Rating: </p><p>{this.state.details.imdbRating}</p></li>\r\n                            <li><p className=\"detail-label\">Genre: </p><p>{this.state.details.Genre}</p></li>\r\n                            <li><p className=\"detail-label\">Rating: </p><p>{this.state.details.Rated}</p></li>\r\n                            <li><p className=\"detail-label\">Length: </p><p>{this.state.details.Runtime}</p></li>\r\n                            <li><p className=\"detail-label\">Country: </p><p>{this.state.details.Country}</p></li>\r\n                            <li><p className=\"detail-label\">Language: </p><p>{this.state.details.Language}</p></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {    //error\r\n            detailHTML = (\r\n                <div className=\"details-container\">\r\n                    <p className=\"details-error\">\r\n                        Something went wrong!\r\n                    </p>\r\n                </div>\r\n            )\r\n        }\r\n\r\n\r\n        return (\r\n            <div className=\"result\" onClick={this.handleOnClick}>\r\n                <div className=\"result-info\">\r\n                    <div className=\"result-title-container\">\r\n                        <div className=\"result-title\">\r\n                            <p>{this.props.title}</p>\r\n                        </div>\r\n                        <div className=\"result-year\">\r\n                            <p>({this.props.year})</p>\r\n                        </div>\r\n                    </div>\r\n                    {detailHTML}\r\n                </div>\r\n                <div className=\"result-img-container\">\r\n                    {(this.props.img === \"N/A\") ? (\r\n                        <img className=\"result-img\" src={PlaceholderImage} alt=\"Movie Poster PlaceHolder\" />\r\n                    ) : (\r\n                        <img className=\"result-img\" src={this.props.img} alt=\"Movie Poster\" />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass ResultsList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            resultsURI: \"\",\r\n            currentPage: 1,\r\n            fulfilled: false,\r\n            status: null,\r\n            results: [],\r\n            totalResults: 0\r\n        }\r\n    }\r\n\r\n    goToPage = (data) => {\r\n        console.log(data);\r\n        var selected = data.selected + 1;\r\n        console.log(\"gotopage\" + this.state.resultsURI);\r\n\r\n        var baseURI = this.state.resultsURI.split(\"&page=\")[0];\r\n        var pageParam = `&page=${selected}`;\r\n        var pageURI = baseURI + pageParam;\r\n        console.log(\"pageURI\" + pageURI);\r\n\r\n        this.setState({\r\n            currentPage: selected\r\n        });\r\n\r\n        console.log(pageURI);\r\n        this.getResults(pageURI);\r\n    }\r\n\r\n    getResults(URI) {\r\n        console.log(\"getting results for list\");\r\n        console.log(URI);\r\n        fetch(URI)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data);\r\n\r\n                if (data.Response === \"False\") {\r\n                    this.setState({\r\n                        fulfilled: false,\r\n                        status: data.Error,\r\n                        results: [],\r\n                        totalResults: 0,\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        fulfilled: true,\r\n                        status: \"Showing Results:\",\r\n                        results: data.Search,\r\n                        totalResults: data.totalResults,\r\n                        resultsURI: URI\r\n                    })\r\n                }\r\n            },\r\n                (error) => {\r\n                    console.log(error)\r\n                }\r\n            );\r\n    }\r\n\r\n    onResults() {\r\n        if (this.state.fulfilled && this.props.onResults) {\r\n            this.props.onResults(this.state.fulfilled);\r\n            console.log(\"Changed CSS file!\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"search-header\">\r\n                    <Search\r\n                        onSubmit={queryURI => this.getResults(queryURI)}\r\n                    />\r\n                    {this.state.fulfilled === true &&\r\n                        <div className=\"paginate-container\">\r\n                            <ReactPaginate\r\n                                containerClassName=\"pagination\"\r\n                                pageCount={Math.ceil(this.state.totalResults / 10)}\r\n                                pageRangeDisplayed={5}\r\n                                marginPagesDisplayed={2}\r\n                                onPageChange={this.goToPage}\r\n                            />\r\n                        </div>}\r\n                </div>\r\n                <div className=\"results-status-container\">\r\n                    {this.state.fulfilled !== true && <h3 className=\"results-status\">{this.state.status}</h3>}\r\n                </div>\r\n                {(this.state.fulfilled === true) && (\r\n                    this.state.results.map((result) => (\r\n                        <div key={result.imdbID}>\r\n                            <Result\r\n                                img={result.Poster}\r\n                                title={result.Title}\r\n                                type={result.Type}\r\n                                year={result.Year}\r\n                                imdbID={result.imdbID}\r\n                            />\r\n                        </div>\r\n                    ))\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n//details to display when user clicks movie div\r\nclass Details extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = ({\r\n            status: \"false\",\r\n            data: {}\r\n        });\r\n\r\n    }\r\n\r\n    handleOnClick(event) {\r\n        if (!this.state.isEmpty && this.props.onSubmit) {\r\n            this.props.onSubmit(this.prop);\r\n\r\n        }\r\n    }\r\n\r\n    fetchAdditionalDetails() {\r\n        console.log(\"getting details for \" + this.props.title);\r\n        fetch(this.props.uri)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data);\r\n\r\n                if (data.Response === \"false\") {\r\n                    this.setState({\r\n                        status: \"error\",\r\n                        data: {}\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        status: \"true\",\r\n                        data: data\r\n                    })\r\n                    console.log(\"Details Obtained \" + Date.now());\r\n                }\r\n            },\r\n                (error) => {\r\n                    console.log(error)\r\n                }\r\n            );\r\n\r\n        //\r\n    }\r\n\r\n    render() {\r\n        let html;\r\n        console.log(\"Details Updated \" + Date.now())\r\n        if (this.props.status === \"false\") {\r\n            html = (\r\n                <div className=\"details-bottom\">\r\n                    <p className=\"details-not-clicked\">Click panel to show more!</p>\r\n                </div>\r\n            )\r\n        } else if (this.props.status === \"true\") {\r\n            html = (\r\n                <div className=\"details-container\">\r\n                    <div className=\"details-top\">\r\n                        <p className=\"plot\" id=\"plot\">\r\n                            {this.plot}\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"details-bottom\">\r\n                        <ul className=\"details-list\">\r\n                            <li><p className=\"detail-label\">Actors: </p><p>{this.actors}</p></li>\r\n                            <li><p className=\"detail-label\">Studios: </p><p>{this.production}</p></li>\r\n                            <li><p className=\"detail-label\">Premiered: </p><p>{this.release}</p></li>\r\n                            <li><p className=\"detail-label\">IMDB Rating: </p><p>{this.imdbRating}</p></li>\r\n                            <li><p className=\"detail-label\">Genre: </p><p>{this.genre}</p></li>\r\n                            <li><p className=\"detail-label\">Rating: </p><p>{this.rated}</p></li>\r\n                            <li><p className=\"detail-label\">Length: </p><p>{this.rated}</p></li>\r\n                            <li><p className=\"detail-label\">Country: </p><p>{this.country}</p></li>\r\n                            <li><p className=\"detail-label\">Language: </p><p>{this.language}</p></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {    //error\r\n            html = (\r\n                <div className=\"details-container\">\r\n                    <p className=\"details-error\">\r\n                        Something went wrong!\r\n                    </p>\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            html\r\n        )\r\n    }\r\n}\r\n\r\nclass ShowMore extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n}\r\n\r\nfunction SearchApp() {\r\n    return (\r\n        <div>\r\n            <ResultsList >\r\n            </ResultsList>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nReactDOM.render(<SearchApp />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}