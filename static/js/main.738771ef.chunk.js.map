{"version":3,"sources":["img-placeholder.png","index.js"],"names":["BASE_API_URI","Search","props","state","searchBarContainerClassName","isEmpty","queryURI","isSubmitted","handleChange","bind","handleSubmit","className","this","onSubmit","htmlFor","placeholder","onChange","value","query","event","setState","target","trim","length","split","join","preventDefault","searchURI","console","log","React","Component","Result","fetchAdditionalDetails","title","fetch","imdbID","then","res","json","data","Response","detailsFulfilled","details","error","wasClicked","handleOnClick","year","onClick","Released","Rated","Genre","img","src","PlaceholderImage","alt","ResultsList","goToPage","selected","pageURI","JSON","parse","resultsURI","currentPage","getResults","fulfilled","status","results","totalResults","URI","Error","stringify","onResults","containerClassName","pageCount","Math","ceil","pageRangeDisplayed","marginPagesDisplayed","onPageChange","map","result","Poster","Title","type","Type","Year","SearchApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.738771ef.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/img-placeholder.f9c8df69.png\";","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactPaginate from 'react-paginate';\r\nimport PlaceholderImage from './img-placeholder.png';\r\nimport './style1.css';\r\nimport './style2.css';\r\n\r\nconst BASE_API_URI = \"https://www.omdbapi.com/?apikey=dc24cbd7\";\r\n\r\nclass Search extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            searchBarContainerClassName: \"search-bar-container\",\r\n            isEmpty: true,\r\n            queryURI: '',\r\n            isSubmitted: false\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.state.searchBarContainerClassName}>\r\n                <div className=\"search-bar\">\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <label htmlFor=\"search-query\">\r\n                            Movie Search\r\n                        </label>\r\n                        <br>\r\n                        </br>\r\n                        <input\r\n                            placeholder=\"The Wizard of Oz\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.query}\r\n                        />\r\n                        <button>\r\n                            Search\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            isEmpty: event.target.value.trim().length === 0,\r\n            queryURI: BASE_API_URI + \"&s=\" + event.target.value.trim().split(' ').join('+')\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        const searchURI = this.state.queryURI;\r\n\r\n        //get JSON from api using searchURI, parse and fill\r\n        if (!this.state.isEmpty && this.props.onSubmit) {\r\n            this.props.onSubmit(searchURI);\r\n            console.log(\"passed uri using props function\");\r\n            this.setState({\r\n                searchBarContainerClassName: \"search-bar-container-with-results\"\r\n            })\r\n        }\r\n        console.log(searchURI);\r\n    }\r\n}\r\n\r\nclass Result extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            wasClicked: false,\r\n            details: {},\r\n            detailsFulfilled: false\r\n        }\r\n        this.handleOnClick = this.handleOnClick.bind(this);\r\n    }\r\n\r\n    fetchAdditionalDetails = () => {\r\n        console.log(\"getting details for \" + this.props.title);\r\n        fetch(BASE_API_URI + \"&i=\" + this.props.imdbID)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data);\r\n\r\n                if (data.Response === \"False\") {\r\n                    this.setState({\r\n                        detailsFulfilled: false,\r\n                        details: {}\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        detailsFulfilled: true,\r\n                        details: data\r\n                    })\r\n                }\r\n            },\r\n                (error) => {\r\n                    console.log(error)\r\n                }\r\n            );\r\n    }\r\n\r\n    handleOnClick(event) {\r\n        event.preventDefault();\r\n        this.fetchAdditionalDetails();\r\n        this.setState({\r\n            wasClicked: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"result\">\r\n                <div className=\"result-info\">\r\n                    <div className=\"result-title\">\r\n                        <p>{this.props.title}</p>\r\n                    </div>\r\n                    {(this.state.detailsFulfilled !== true) ? (\r\n                        <div className=\"result-details\">\r\n                            <p>\r\n                                Year: {this.props.year}\r\n                                <br></br>\r\n                                <button onClick={this.handleOnClick}>\r\n                                    click for more info\r\n                                </button>\r\n                            </p>\r\n                        </div>\r\n                    ) : (\r\n                        <div className=\"result-details\">\r\n                            <p>\r\n                                Year: {this.props.year}\r\n                                <br></br>\r\n                                Released: {this.state.details.Released}\r\n                                <br></br>\r\n                                Rated: {this.state.details.Rated}\r\n                                <br></br>\r\n                                Genre: {this.state.details.Genre}\r\n                            </p>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <div className=\"result-img-container\">\r\n                    {(this.props.img === \"N/A\") ? (\r\n                        <img className=\"result-img\" src={PlaceholderImage} alt=\"Movie Poster PlaceHolder\" />\r\n                    ) : (\r\n                        <img className=\"result-img\" src={this.props.img} alt=\"Movie Poster\" />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass ResultsList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            resultsURI: \"\",\r\n            currentPage: 1,\r\n            fulfilled: false,\r\n            status: null,\r\n            results: [],\r\n            totalResults: 0\r\n        }\r\n    }\r\n\r\n\r\n\r\n    goToPage = (data) => {\r\n        console.log(data);\r\n        var selected = data.selected + 1;\r\n\r\n        var baseURI = JSON.parse(this.state.resultsURI).split(\"&page=\")[0];\r\n        var pageParam = `&page=${selected}`;\r\n        var pageURI = baseURI + pageParam;\r\n\r\n        this.setState({\r\n            currentPage: selected\r\n        })\r\n\r\n        console.log(pageURI);\r\n        this.getResults(pageURI);\r\n    }\r\n\r\n    getResults(URI) {\r\n        console.log(\"getting results for list\");\r\n        console.log(URI);\r\n        fetch(URI)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data);\r\n\r\n                if (data.Response === \"False\") {\r\n                    this.setState({\r\n                        fulfilled: false,\r\n                        status: data.Error,\r\n                        results: [],\r\n                        totalResults: 0,\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        fulfilled: true,\r\n                        status: \"Showing Results:\",\r\n                        results: data.Search,\r\n                        totalResults: data.totalResults,\r\n                        resultsURI: JSON.stringify(URI)\r\n                    })\r\n                }\r\n            },\r\n                (error) => {\r\n                    console.log(error)\r\n                }\r\n            );\r\n    }\r\n\r\n    onResults() {\r\n        if (this.state.fulfilled && this.props.onResults) {\r\n            this.props.onResults(this.state.fulfilled);\r\n            console.log(\"Changed CSS file!\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"search-header\">\r\n                    <Search\r\n                        onSubmit={queryURI => this.getResults(queryURI)}\r\n                    />\r\n                    {this.state.fulfilled === true &&\r\n                        <div className=\"paginate-container\">\r\n                            <ReactPaginate\r\n                                containerClassName=\"pagination\"\r\n                                pageCount={Math.ceil(this.state.totalResults / 10)}\r\n                                pageRangeDisplayed={5}\r\n                                marginPagesDisplayed={2}\r\n                                onPageChange={this.goToPage}\r\n                            />\r\n                        </div>}\r\n                </div>\r\n                <div className=\"results-status-container\">\r\n                    {this.state.fulfilled !== true && <h3 className=\"results-status\">{this.state.status}</h3>}\r\n                </div>\r\n                {(this.state.fulfilled === true) && (\r\n                    this.state.results.map((result) => (\r\n                        <div key={result.imdbID}>\r\n                            <Result\r\n                                img={result.Poster}\r\n                                title={result.Title}\r\n                                type={result.Type}\r\n                                year={result.Year}\r\n                                imdbID={result.imdbID}\r\n                            />\r\n                        </div>\r\n                    ))\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction SearchApp() {\r\n    return (\r\n        <div>\r\n            <ResultsList >\r\n            </ResultsList>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nReactDOM.render(<SearchApp />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}