{"version":3,"sources":["img-placeholder.png","index.js"],"names":["EXAMPLE_MOVIES","ExampleMovies","movies","BASE_API_URI","Search","props","state","searchBarContainerClassName","isEmpty","queryURI","isSubmitted","randomMovieIndex","Math","floor","random","length","exampleMovie","handleChange","bind","handleSubmit","className","this","onSubmit","htmlFor","placeholder","onChange","value","query","event","setState","target","trim","split","join","preventDefault","searchURI","console","log","React","Component","Result","titleStyles","wasClicked","titleStyle","handleOnClick","resultHTML","onClick","title","year","img","type","imdbID","src","PlaceholderImage","alt","ResultsList","goToPage","data","selected","resultsURI","pageURI","currentPage","getResults","fulfilled","status","results","totalResults","URI","fetch","then","res","json","Response","Error","error","onResults","containerClassName","pageCount","ceil","pageRangeDisplayed","marginPagesDisplayed","onPageChange","map","result","Poster","Title","Type","Year","Details","fetchAdditionalDetails","details","updateValuesToDisplay","Date","now","undefined","Released","months","dateSplit","day","month","indexOf","date","Plot","Actors","Production","imdbRating","Genre","Rated","Runtime","Country","Language","toLocaleDateString","id","SearchApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fcd17caf.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/img-placeholder.f9c8df69.png\";","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactPaginate from 'react-paginate';\r\nimport PlaceholderImage from './img-placeholder.png';\r\nimport ExampleMovies from './example-movies.json'\r\nimport './style1.css';\r\n\r\nconst EXAMPLE_MOVIES = ExampleMovies.movies;\r\nconst BASE_API_URI = 'https://www.omdbapi.com/?apikey=dc24cbd7&type=movie';\r\n\r\nclass Search extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            searchBarContainerClassName: 'search-bar-container',\r\n            isEmpty: true,\r\n            queryURI: '',\r\n            isSubmitted: false\r\n        };\r\n\r\n        let randomMovieIndex = Math.floor(Math.random() * EXAMPLE_MOVIES.length);\r\n\r\n        this.exampleMovie = EXAMPLE_MOVIES[randomMovieIndex];\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.state.searchBarContainerClassName}>\r\n                <div className='search-bar'>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <label htmlFor='search-query'>\r\n                            Movie Search\r\n                        </label>\r\n                        <br>\r\n                        </br>\r\n                        <input\r\n                            placeholder={this.exampleMovie}\r\n                            onChange={this.handleChange}\r\n                            value={this.state.query}\r\n                        />\r\n                        <button>\r\n                            Search\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    //user typing updates query params for api\r\n    handleChange(event) {\r\n        this.setState({\r\n            isEmpty: event.target.value.trim().length === 0,\r\n            queryURI: BASE_API_URI + '&s=' + event.target.value.trim().split(' ').join('+')\r\n        });\r\n    }\r\n\r\n    //request on submit\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        const searchURI = this.state.queryURI;\r\n\r\n        //get JSON from api using searchURI, parse and fill\r\n        if (!this.state.isEmpty && this.props.onSubmit) {\r\n            this.props.onSubmit(searchURI);\r\n            console.log('passed uri using props function');\r\n            this.setState({\r\n                searchBarContainerClassName: 'search-bar-container-with-results'\r\n            });\r\n        }\r\n        console.log(searchURI);\r\n    }\r\n}\r\n\r\nclass Result extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.titleStyles = [\"result-title-no-details\", \"result-title-no-details-hovering\"]\r\n\r\n        this.state = {\r\n            wasClicked: false,\r\n            titleStyle: 0  //for tracking style of title when hovering\r\n        };\r\n        this.handleOnClick = this.handleOnClick.bind(this);\r\n    }\r\n\r\n    handleOnClick(event) {\r\n        event.preventDefault();\r\n        this.setState({\r\n            wasClicked: true\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let resultHTML = (\r\n            <div className=\"result-no-details\" onClick={this.handleOnClick}>\r\n                <div className=\"result-title-no-details-container\">\r\n                    <button className={this.titleStyles[this.state.titleStyle]}>\r\n                        {this.props.title}\r\n                    </button>\r\n                </div>\r\n                <div className=\"result-info-no-details-container\">\r\n                    <p className=\"result-info-no-details\">\r\n                        ({this.props.year})\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        if (this.state.wasClicked === true) {\r\n            //was clicked, create details component and show details\r\n            resultHTML = (\r\n                <div className='result' onClick={this.handleOnClick}>\r\n                    <div className='result-info'>\r\n                        <div className='result-title-container'>\r\n                            <div className='result-title'>\r\n                                <p>{this.props.title}</p>\r\n                            </div>\r\n                            <div className='result-year'>\r\n                                <p>({this.props.year})</p>\r\n                            </div>\r\n                        </div>\r\n                        {\r\n                            //create Details Component once clicked\r\n                            this.state.wasClicked\r\n                            &&\r\n                            <Details\r\n                                img={this.props.img}\r\n                                title={this.props.title}\r\n                                type={this.props.type}\r\n                                year={this.props.year}\r\n                                imdbID={this.props.imdbID}\r\n                            />\r\n                        }\r\n                    </div>\r\n                    <div className='result-img-container'>\r\n                        {(this.props.img === 'N/A') ? (\r\n                            <img className='result-img' src={PlaceholderImage} alt='Movie Poster PlaceHolder' />\r\n                        ) : (\r\n                            <img className='result-img' src={this.props.img} alt='Movie Poster' />\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            resultHTML\r\n        );\r\n    }\r\n}\r\n\r\nclass ResultsList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            resultsURI: '',\r\n            currentPage: 1,\r\n            fulfilled: false,\r\n            status: null,\r\n            results: [],\r\n            totalResults: 0\r\n        }\r\n    }\r\n\r\n    goToPage = (data) => {\r\n        console.log(data);\r\n        var selected = data.selected + 1;\r\n        console.log('gotopage' + this.state.resultsURI);\r\n\r\n        var baseURI = this.state.resultsURI.split('&page=')[0];\r\n        var pageParam = `&page=${selected}`;\r\n        var pageURI = baseURI + pageParam;\r\n        console.log('pageURI' + pageURI);\r\n\r\n        this.setState({\r\n            currentPage: selected\r\n        });\r\n\r\n        console.log(pageURI);\r\n        this.getResults(pageURI);\r\n    }\r\n\r\n    getResults(URI) {\r\n        console.log('getting results for list');\r\n        console.log(URI);\r\n        fetch(URI)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data);\r\n\r\n                if (data.Response === 'false') {\r\n                    this.setState({\r\n                        fulfilled: false,\r\n                        status: data.Error,\r\n                        results: [],\r\n                        totalResults: 0,\r\n                    });\r\n                } else {\r\n                    this.setState({\r\n                        fulfilled: true,\r\n                        status: 'Showing Results:',\r\n                        results: data.Search,\r\n                        totalResults: data.totalResults,\r\n                        resultsURI: URI\r\n                    });\r\n                }\r\n            },\r\n                (error) => {\r\n                    console.log(error)\r\n                }\r\n            );\r\n    }\r\n\r\n    onResults() {\r\n        if (this.state.fulfilled && this.props.onResults) {\r\n            this.props.onResults(this.state.fulfilled);\r\n            console.log('Changed CSS file!');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className='search-header'>\r\n                    <Search\r\n                        onSubmit={queryURI => this.getResults(queryURI)}\r\n                    />\r\n                    {this.state.fulfilled === true &&\r\n                        <div className='paginate-container'>\r\n                            <ReactPaginate\r\n                                containerClassName='pagination'\r\n                                pageCount={Math.ceil(this.state.totalResults / 10)}\r\n                                pageRangeDisplayed={5}\r\n                                marginPagesDisplayed={2}\r\n                                onPageChange={this.goToPage}\r\n                            />\r\n                        </div>}\r\n                </div>\r\n                <div className='results-status-container'>\r\n                    {this.state.fulfilled !== true && <h3 className='results-status'>{this.state.status}</h3>}\r\n                </div>\r\n                {(this.state.fulfilled === true) && (\r\n                    this.state.results.map((result) => (\r\n                        <div key={result.imdbID}>\r\n                            <Result\r\n                                img={result.Poster}\r\n                                title={result.Title}\r\n                                type={result.Type}\r\n                                year={result.Year}\r\n                                imdbID={result.imdbID}\r\n                            />\r\n                        </div>\r\n                    ))\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Details extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = ({\r\n            status: 'false',\r\n            data: {}\r\n        });\r\n\r\n        //get details upon construction (when parent is clicked)\r\n        this.fetchAdditionalDetails();\r\n    }\r\n\r\n    fetchAdditionalDetails() {\r\n        console.log('getting details for ' + this.props.title);\r\n        fetch(BASE_API_URI + '&i=' + this.props.imdbID)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data);\r\n\r\n                if (data.Response === 'false') {\r\n                    this.setState({\r\n                        status: 'error',\r\n                        details: {}\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        status: 'loading',\r\n                        details: data\r\n                    })\r\n                    //format values to user friendly formats\r\n                    this.updateValuesToDisplay();\r\n                    console.log('Details Obtained ' + Date.now());\r\n                }\r\n            },\r\n                (error) => {\r\n                    console.log(error)\r\n                }\r\n            );\r\n    }\r\n\r\n    updateValuesToDisplay() {\r\n        //setup date fetched from api for locale of user \r\n        let data = this.state.details;\r\n\r\n        console.log(this.state.details);\r\n        if (this.state.details === undefined) {\r\n            console.error('DETAILS IS UNDEFINED!');\r\n        } else {\r\n            if (this.state.details.Released !== 'N/A') {\r\n                var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n                var dateSplit = this.state.details.Released.split(' ');\r\n                var day = dateSplit[0];\r\n                console.log(dateSplit);\r\n                var month = (months.indexOf(dateSplit[1]) + 1 >= 10) ? (months.indexOf(dateSplit[1])) : ('0' + months.indexOf(dateSplit[1]));\r\n                var year = dateSplit[2];\r\n                var date = new Date(`${year}-${month}-${day}`);\r\n            }\r\n\r\n            console.log('r: ' + this.state.details.Released);\r\n            data.Plot = this.state.details.Plot !== 'N/A' ? this.state.details.Plot : 'What was this movie about again?';\r\n            data.Actors = this.state.details.Actors !== 'N/A' ? this.state.details.Actors : 'I don\\'t know who!';\r\n            data.Production = this.state.details.Production !== 'N/A' ? this.state.details.Production : 'Who made this?';\r\n            data.imdbRating = this.state.details.imdbRating !== 'N/A' ? this.state.details.imdbRating : '5/7 would rate again (jk no rating found).';\r\n            data.Genre = this.state.details.Genre !== 'N/A' ? this.state.details.Genre : 'Genre unknown whoops!';\r\n            data.Rated = this.state.details.Rated !== 'N/A' ? this.state.details.Rated : 'I (for \"I\" don\\'t know.)';\r\n            data.Runtime = this.state.details.Runtime !== 'N/A' ? this.state.details.Runtime : 'This movie is longer than 0.01 seconds probably.';\r\n            data.Country = this.state.details.Country !== 'N/A' ? this.state.details.Country : 'Mars? (I don\\'t know sorry!)';\r\n            data.Language = this.state.details.Language !== 'N/A' ? this.state.details.Language : 'Vulkan (or unknown)';\r\n            data.Released = this.state.details.Released !== 'N/A' ? date.toLocaleDateString() : 'Time is just an illusion, and also I don\\'t know when premiered.';\r\n\r\n            this.setState({\r\n                status: 'true',\r\n                details: data\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log('details render');\r\n        let detailHTML;\r\n        //details panel that requires another API request \r\n\r\n        if (this.state.status === 'true') {\r\n            detailHTML = (\r\n                <div className='details-container'>\r\n                    <div className='details-top'>\r\n                        <p className='plot' id='plot'>\r\n                            {this.state.details.Plot}\r\n                        </p>\r\n                    </div>\r\n                    <div className='details-bottom'>\r\n                        <ul className='details-list'>\r\n                            <li><p className='detail-label'>Actors: </p><p>{this.state.details.Actors}</p></li>\r\n                            <li><p className='detail-label'>Studios: </p><p>{this.state.details.Production}</p></li>\r\n                            <li><p className='detail-label'>Premiered: </p><p>{this.state.details.Released}</p></li>\r\n                            <li><p className='detail-label'>IMDB Rating: </p><p>{this.state.details.imdbRating}</p></li>\r\n                            <li><p className='detail-label'>Genre: </p><p>{this.state.details.Genre}</p></li>\r\n                            <li><p className='detail-label'>Rating: </p><p>{this.state.details.Rated}</p></li>\r\n                            <li><p className='detail-label'>Length: </p><p>{this.state.details.Runtime}</p></li>\r\n                            <li><p className='detail-label'>Country: </p><p>{this.state.details.Country}</p></li>\r\n                            <li><p className='detail-label'>Language: </p><p>{this.state.details.Language}</p></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else if ('loading') {\r\n            detailHTML = (\r\n                <div className='details-container'>\r\n                    <p className='details-loading'>\r\n                        Fetching details...\r\n                    </p>\r\n                </div>\r\n            );\r\n        } else {    //error\r\n            detailHTML = (\r\n                <div className='details-container'>\r\n                    <p className='details-error'>\r\n                        Something went wrong!\r\n                    </p>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return detailHTML;\r\n    }\r\n}\r\n\r\nclass ShowMore extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n}\r\n\r\nfunction SearchApp() {\r\n    return (\r\n        <div>\r\n            <ResultsList >\r\n            </ResultsList>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nReactDOM.render(<SearchApp />, document.getElementById('root'));\r\n"],"sourceRoot":""}