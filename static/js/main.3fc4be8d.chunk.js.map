{"version":3,"sources":["base-api-uri.js","search.js","details.js","img-placeholder.png","result.js","show-more.js","results-list.js","search-app.js","index.js"],"names":["BASE_API_URI","EXAMPLE_MOVIES","ExampleMovies","movies","Search","props","state","searchBarContainerClassName","isEmpty","queryURI","isSubmitted","randomMovieIndex","Math","floor","random","length","exampleMovie","handleChange","bind","handleSubmit","event","quri","target","value","trim","split","join","this","setState","preventDefault","searchURI","onSubmit","console","log","className","htmlFor","placeholder","onChange","query","React","Component","Details","status","data","fetchAdditionalDetails","title","fetch","imdbID","then","res","json","Response","details","updateValuesToDisplay","Date","now","error","undefined","date","Released","months","dateSplit","day","month","indexOf","year","Plot","Actors","Production","imdbRating","Genre","Rated","Runtime","Country","Language","toLocaleDateString","id","Result","titleStyles","wasClicked","titleStyle","handleOnClick","handleOnMouseOver","handleOnMouseOut","resultHTML","onClick","onMouseOver","onMouseOut","img","type","src","PlaceholderImage","alt","ShowMore","buttonStyles","pagesRemaining","buttonStyle","ResultsList","resultsURI","currentPage","showMorePageIterator","fulfilled","results","totalResults","selected","pageURI","getResults","URI","Error","concat","onResults","pagesFromCurrent","containerClassName","pageCount","ceil","pageRangeDisplayed","marginPagesDisplayed","onPageChange","goToPage","map","result","Poster","Title","Type","Year","showMore","SearchApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3fc4be8d.chunk.js","sourcesContent":["const BASE_API_URI = 'https://www.omdbapi.com/?apikey=dc24cbd7&type=movie'\r\nexport default BASE_API_URI\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport ExampleMovies from './example-movies.json'\r\nimport BASE_API_URI from './base-api-uri'\r\n\r\nconst EXAMPLE_MOVIES = ExampleMovies.movies\r\n\r\n/* SEARCH BAR */\r\nclass Search extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      searchBarContainerClassName: 'search-bar-container',\r\n      isEmpty: true,\r\n      queryURI: '',\r\n      isSubmitted: false\r\n    }\r\n\r\n    const randomMovieIndex = Math.floor(Math.random() * EXAMPLE_MOVIES.length)\r\n\r\n    this.exampleMovie = EXAMPLE_MOVIES[randomMovieIndex]\r\n\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.handleSubmit = this.handleSubmit.bind(this)\r\n  }\r\n\r\n  // user typing updates query params for api\r\n  handleChange (event) {\r\n    const quri = BASE_API_URI +\r\n              '&s=' + event.target.value.trim().split(' ').join('+') +\r\n              '&page=1'\r\n\r\n    this.setState({\r\n      isEmpty: event.target.value.trim().length === 0,\r\n      queryURI: quri\r\n    })\r\n  }\r\n\r\n  // request on submit\r\n  handleSubmit (event) {\r\n    event.preventDefault()\r\n    const searchURI = this.state.queryURI\r\n\r\n    // get JSON from api using searchURI, parse and fill\r\n    if (!this.state.isEmpty && this.props.onSubmit) {\r\n      this.props.onSubmit(searchURI)\r\n      console.log('passed uri using props function')\r\n      this.setState({\r\n        searchBarContainerClassName: 'search-bar-container-with-results'\r\n      })\r\n    }\r\n    console.log(searchURI)\r\n  }\r\n\r\n  render () {\r\n    return (\r\n              <div className={this.state.searchBarContainerClassName}>\r\n                  <div className='search-bar'>\r\n                      <form onSubmit={this.handleSubmit}>\r\n                          <label htmlFor='search-query'>\r\n                              Movie Search\r\n                          </label>\r\n                          <br />\r\n                          <input\r\n                              placeholder={this.exampleMovie}\r\n                              onChange={this.handleChange}\r\n                              value={this.state.query}\r\n                          />\r\n                          <button>\r\n                              Search\r\n                          </button>\r\n                      </form>\r\n                  </div>\r\n              </div>\r\n    )\r\n  }\r\n}\r\n\r\n// props type checking\r\nSearch.propTypes = {\r\n  onSubmit: PropTypes.func\r\n}\r\n\r\nexport default Search\r\n","import React from 'react'\r\nimport BASE_API_URI from './base-api-uri'\r\nimport PropTypes from 'prop-types'\r\n\r\n// Details class handles user clicking the search result,\r\n// and gathers more details and displays them to user.\r\nclass Details extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = ({\r\n      status: 'false', // 'false', 'loading', or 'true'\r\n      data: {}\r\n    })\r\n\r\n    // get details upon construction (when parent is clicked)\r\n    this.fetchAdditionalDetails()\r\n  }\r\n\r\n  // from api get details\r\n  fetchAdditionalDetails () {\r\n    console.log('getting details for ' + this.props.title)\r\n    fetch(BASE_API_URI + '&i=' + this.props.imdbID)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        console.log(data)\r\n\r\n        if (data.Response === 'false') {\r\n          this.setState({\r\n            status: 'error',\r\n            details: {}\r\n          })\r\n        } else {\r\n          this.setState({\r\n            status: 'loading',\r\n            details: data\r\n          })\r\n          // format values to user friendly formats\r\n          this.updateValuesToDisplay()\r\n          console.log('Details Obtained ' + Date.now())\r\n        }\r\n      },\r\n      (error) => {\r\n        console.log(error)\r\n      }\r\n      )\r\n  }\r\n\r\n  updateValuesToDisplay () {\r\n    // setup date fetched from api for locale of user\r\n    const data = this.state.details\r\n\r\n    console.log(this.state.details)\r\n    if (this.state.details === undefined) {\r\n      console.error('DETAILS IS UNDEFINED!')\r\n    } else {\r\n      // format premiere date if available\r\n      let date\r\n      if (this.state.details.Released !== 'N/A') {\r\n        const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\r\n        const dateSplit = this.state.details.Released.split(' ')\r\n        const day = dateSplit[0]\r\n        console.log(dateSplit)\r\n        const month = (months.indexOf(dateSplit[1]) + 1 >= 10) ? (months.indexOf(dateSplit[1])) : ('0' + months.indexOf(dateSplit[1]))\r\n        const year = dateSplit[2]\r\n        date = new Date(`${year}-${month}-${day}`)\r\n      }\r\n\r\n      // handle any missing info from api \"N/A\"\r\n      console.log('r: ' + this.state.details.Released)\r\n\r\n      // plot isn't part of bulleted list so will just omit if unavailable\r\n      data.Plot = this.state.details.Plot !== 'N/A' ? this.state.details.Plot : ''\r\n      data.Actors = this.state.details.Actors !== 'N/A' ? this.state.details.Actors : '-'\r\n      data.Production = this.state.details.Production !== 'N/A' ? this.state.details.Production : '-'\r\n      data.imdbRating = this.state.details.imdbRating !== 'N/A' ? this.state.details.imdbRating : '-'\r\n      data.Genre = this.state.details.Genre !== 'N/A' ? this.state.details.Genre : '-'\r\n      data.Rated = this.state.details.Rated !== 'N/A' ? this.state.details.Rated : '-'\r\n      data.Runtime = this.state.details.Runtime !== 'N/A' ? this.state.details.Runtime : '-'\r\n      data.Country = this.state.details.Country !== 'N/A' ? this.state.details.Country : '-'\r\n      data.Language = this.state.details.Language !== 'N/A' ? this.state.details.Language : '-'\r\n      data.Released = this.state.details.Released !== 'N/A' ? date.toLocaleDateString() : '-'\r\n\r\n      this.setState({\r\n        status: 'true',\r\n        details: data\r\n      })\r\n    }\r\n  }\r\n\r\n  render () {\r\n    console.log('details render')\r\n    let detailHTML\r\n\r\n    // successful fetch of details, show them\r\n    if (this.state.status === 'true') {\r\n      detailHTML = (\r\n                  <div className='details-container'>\r\n                      <div className='details-top'>\r\n                          <p className='plot' id='plot'>\r\n                              {this.state.details.Plot}\r\n                          </p>\r\n                      </div>\r\n                      <div className='details-bottom'>\r\n                          <ul className='details-list'>\r\n                              <li><p className='detail-label'>Actors: </p><p>{this.state.details.Actors}</p></li>\r\n                              <li><p className='detail-label'>Studios: </p><p>{this.state.details.Production}</p></li>\r\n                              <li><p className='detail-label'>Premiered: </p><p>{this.state.details.Released}</p></li>\r\n                              <li><p className='detail-label'>IMDB Rating: </p><p>{this.state.details.imdbRating}</p></li>\r\n                              <li><p className='detail-label'>Genre: </p><p>{this.state.details.Genre}</p></li>\r\n                              <li><p className='detail-label'>Rating: </p><p>{this.state.details.Rated}</p></li>\r\n                              <li><p className='detail-label'>Length: </p><p>{this.state.details.Runtime}</p></li>\r\n                              <li><p className='detail-label'>Country: </p><p>{this.state.details.Country}</p></li>\r\n                              <li><p className='detail-label'>Language: </p><p>{this.state.details.Language}</p></li>\r\n                          </ul>\r\n                      </div>\r\n                  </div>\r\n      )\r\n    } else if (this.state.status === 'loading') {\r\n      detailHTML = (\r\n                  <div className='details-container'>\r\n                      <p className='details-loading'>\r\n                          Fetching details...\r\n                      </p>\r\n                  </div>\r\n      )\r\n    } else { // error\r\n      detailHTML = (\r\n                  <div className='details-container'>\r\n                      <p className='details-error'>\r\n                          Something went wrong!\r\n                      </p>\r\n                  </div>\r\n      )\r\n    }\r\n\r\n    return detailHTML\r\n  }\r\n}\r\n\r\n// props type checking\r\nDetails.propTypes = {\r\n  title: PropTypes.string,\r\n  imdbID: PropTypes.string\r\n}\r\n\r\nexport default Details\r\n","export default __webpack_public_path__ + \"static/media/img-placeholder.f9c8df69.png\";","import React from 'react'\r\nimport Details from './details'\r\nimport PropTypes from 'prop-types'\r\nimport PlaceholderImage from './img-placeholder.png'\r\n\r\nclass Result extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.titleStyles = ['result-title-no-details', 'result-title-no-details-hovering']\r\n\r\n    this.state = {\r\n      wasClicked: false,\r\n      titleStyle: 0 // for tracking style of title when hovering\r\n    }\r\n    this.handleOnClick = this.handleOnClick.bind(this)\r\n    this.handleOnMouseOver = this.handleOnMouseOver.bind(this)\r\n    this.handleOnMouseOut = this.handleOnMouseOut.bind(this)\r\n  }\r\n\r\n  handleOnClick (event) {\r\n    event.preventDefault()\r\n    this.setState({\r\n      wasClicked: true\r\n    })\r\n  }\r\n\r\n  handleOnMouseOver (event) {\r\n    this.setState({\r\n      titleStyle: 1\r\n    })\r\n  }\r\n\r\n  handleOnMouseOut (event) {\r\n    this.setState({\r\n      titleStyle: 0\r\n    })\r\n  }\r\n\r\n  render () {\r\n    let resultHTML = (\r\n              <div className='result-no-details-container'>\r\n                  <div\r\n                      className='result-no-details'\r\n                      onClick={this.handleOnClick}\r\n                  >\r\n                      <div className='result-title-no-details-container'>\r\n                          <button\r\n                              className={this.titleStyles[this.state.titleStyle]}\r\n                              onMouseOver={this.handleOnMouseOver}\r\n                              onMouseOut={this.handleOnMouseOut}\r\n                          >\r\n                              {this.props.title}\r\n                          </button>\r\n                      </div>\r\n                      <div className='result-info-no-details-container'>\r\n                          <p className='result-info-no-details'>\r\n                              ({this.props.year})\r\n                          </p>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n    )\r\n\r\n    if (this.state.wasClicked === true) {\r\n      // was clicked, create details component and show details\r\n      resultHTML = (\r\n                  <div className='result' onClick={this.handleOnClick}>\r\n                      <div className='result-info'>\r\n                          <div className='result-title-container'>\r\n                              <div className='result-title'>\r\n                                  <p>{this.props.title}</p>\r\n                              </div>\r\n                              <div className='result-year'>\r\n                                  <p>({this.props.year})</p>\r\n                              </div>\r\n                          </div>\r\n                          {\r\n                              // create Details Component once clicked\r\n                              this.state.wasClicked &&\r\n                              <Details\r\n                                  img={this.props.img}\r\n                                  title={this.props.title}\r\n                                  type={this.props.type}\r\n                                  year={this.props.year}\r\n                                  imdbID={this.props.imdbID}\r\n                              />\r\n                          }\r\n                      </div>\r\n                      <div className='result-img-container'>\r\n                          {(this.props.img === 'N/A')\r\n                            ? (<img\r\n                                  className='result-img'\r\n                                  src={PlaceholderImage}\r\n                                  alt='Movie Poster PlaceHolder'\r\n                              />\r\n                              )\r\n                            : (\r\n                                  <img\r\n                                      className='result-img'\r\n                                      src={this.props.img}\r\n                                      alt='Movie Poster'\r\n                                  />\r\n                              )}\r\n                      </div>\r\n                  </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      resultHTML\r\n    )\r\n  }\r\n}\r\n\r\n// props type checking\r\nResult.propTypes = {\r\n  title: PropTypes.string,\r\n  year: PropTypes.string,\r\n  img: PropTypes.string,\r\n  type: PropTypes.string,\r\n  imdbID: PropTypes.string\r\n}\r\n\r\nexport default Result\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// ShowMore class component allow users to expand current\r\n// page results with just the click of a button.\r\n\r\n// button that shows up at bottom of results\r\n// used for showing more results on same page.\r\nclass ShowMore extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.buttonStyles = ['show-more', 'show-more-hovering']\r\n\r\n    this.state = {\r\n      pagesRemaining: this.props.pagesRemaining,\r\n      buttonStyle: 0\r\n    }\r\n    this.handleOnClick = this.handleOnClick.bind(this)\r\n    this.handleOnMouseOver = this.handleOnMouseOver.bind(this)\r\n    this.handleOnMouseOut = this.handleOnMouseOut.bind(this)\r\n  }\r\n\r\n  handleOnClick (event) {\r\n    if (this.props.onClick) {\r\n      this.props.onClick(event)\r\n    }\r\n  }\r\n\r\n  handleOnMouseOver (event) {\r\n    this.setState({\r\n      buttonStyle: 1\r\n    })\r\n  }\r\n\r\n  handleOnMouseOut (event) {\r\n    this.setState({\r\n      buttonStyle: 0\r\n    })\r\n  }\r\n\r\n  render () {\r\n    return (\r\n              <div className='show-more-container'>\r\n                  <button\r\n                      className={this.buttonStyles[this.state.buttonStyle]} id='show-more'\r\n                      onClick={this.handleOnClick}\r\n                      onMouseOver={this.handleOnMouseOver}\r\n                      onMouseOut={this.handleOnMouseOut}\r\n                  >\r\n                      🠗 Show More Results 🠗\r\n                  </button>\r\n              </div>\r\n    )\r\n  }\r\n}\r\n\r\n// props type checking\r\nShowMore.propTypes = {\r\n  onClick: PropTypes.func,\r\n  pagesRemaining: PropTypes.number\r\n}\r\n\r\nexport default ShowMore\r\n","import React from 'react'\r\nimport ReactPaginate from 'react-paginate'\r\nimport PropTypes from 'prop-types'\r\nimport Search from './search.js'\r\nimport Result from './result.js'\r\nimport ShowMore from './show-more.js'\r\n\r\n/* RESULTS LIST (meat of the app) */\r\nclass ResultsList extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      resultsURI: '',\r\n      currentPage: 1,\r\n      showMorePageIterator: 0, // page offset from initial after showing\r\n      fulfilled: false, // more results\r\n      status: null, // 'true' or 'false' for results of api fetch\r\n      results: [],\r\n      totalResults: 0\r\n    }\r\n  }\r\n\r\n  goToPage (data) {\r\n    // change state so page doesn't have show more or paginate\r\n    // components on page until after results are loaded\r\n    this.setState({\r\n      fulfilled: false,\r\n      status: 'loading'\r\n    })\r\n\r\n    console.log(data)\r\n    const selected = data.selected + 1\r\n    console.log('gotopage' + this.state.resultsURI)\r\n\r\n    const baseURI = this.state.resultsURI.split('&page=')[0]\r\n    const pageParam = `&page=${selected}`\r\n    const pageURI = baseURI + pageParam\r\n    console.log('pageURI' + pageURI)\r\n\r\n    this.setState({\r\n      currentPage: selected,\r\n      results: [] // result list (show as new page)\r\n    })\r\n\r\n    console.log(pageURI)\r\n    this.getResults(pageURI)\r\n  }\r\n\r\n  getResults (URI) {\r\n    console.log('getting results for list')\r\n    console.log(URI)\r\n    fetch(URI)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        console.log(data)\r\n\r\n        if (data.Response === 'False') {\r\n          this.setState({\r\n            fulfilled: false,\r\n            status: data.Error,\r\n            totalResults: 0\r\n          })\r\n        } else {\r\n          this.setState({\r\n            fulfilled: true,\r\n            status: 'Showing Results:',\r\n            results: this.state.results.concat(data.Search),\r\n            totalResults: data.totalResults,\r\n            resultsURI: URI\r\n          })\r\n        }\r\n      },\r\n      (error) => {\r\n        console.log(error)\r\n      }\r\n      )\r\n  }\r\n\r\n  onResults () {\r\n    if (this.state.fulfilled && this.props.onResults) {\r\n      this.props.onResults(this.state.fulfilled)\r\n      console.log('Changed CSS file!')\r\n    }\r\n  }\r\n\r\n  showMore () {\r\n    console.log('Showing more')\r\n    console.log(this.state)\r\n    // will concatenate results list without resetting like this.goToPage()\r\n    console.log(this.state.resultsURI)\r\n\r\n    const pagesFromCurrent = this.state.showMorePageIterator + 1\r\n    this.setState({\r\n      showMorePageIterator: pagesFromCurrent\r\n    })\r\n\r\n    console.log(pagesFromCurrent + ':' + this.state.showMorePageIterator)\r\n\r\n    const baseURI = this.state.resultsURI.split('&page=')[0]\r\n    const pageParam = '&page=' + this.state.currentPage + this.state.showMorePageIterator\r\n    const pageURI = baseURI + pageParam\r\n    console.log(pageURI)\r\n    this.getResults(pageURI)\r\n  }\r\n\r\n  render () {\r\n    return (\r\n              <div>\r\n                  <div className='search-header'>\r\n                      <Search\r\n                          onSubmit={queryURI => this.getResults(queryURI)}\r\n                      />\r\n                      {this.state.fulfilled === true &&\r\n                          <div className='paginate-container'>\r\n                              <ReactPaginate\r\n                                  containerClassName='pagination'\r\n                                  pageCount={Math.ceil(this.state.totalResults / 10)}\r\n                                  pageRangeDisplayed={5}\r\n                                  marginPagesDisplayed={2}\r\n                                  onPageChange={this.goToPage.bind(this)}\r\n                              />\r\n                          </div>}\r\n                  </div>\r\n\r\n                  <div className='results-status-container'>\r\n                      {this.state.fulfilled !== true && <h3 className='results-status'>{this.state.status}</h3>}\r\n                  </div>\r\n\r\n                  {(this.state.fulfilled === true) && (\r\n                    this.state.results.map((result) => (\r\n                          <div key={result.imdbID}>\r\n                              <Result\r\n                                  img={result.Poster}\r\n                                  title={result.Title}\r\n                                  type={result.Type}\r\n                                  year={result.Year}\r\n                                  imdbID={result.imdbID}\r\n                              />\r\n                          </div>\r\n                    ))\r\n                  )}\r\n\r\n                  {(this.state.fulfilled === true) && (\r\n                      <ShowMore\r\n                          onClick={this.showMore.bind(this)}\r\n                          pagesRemaining={\r\n                              Math.ceil(this.state.totalResults / 10) - this.state.currentPage\r\n                          }\r\n                      />\r\n                  )}\r\n\r\n                  {this.state.fulfilled === true &&\r\n                      <div className='paginate-container'>\r\n                          <ReactPaginate\r\n                              containerClassName='pagination'\r\n                              pageCount={Math.ceil(this.state.totalResults / 10)}\r\n                              pageRangeDisplayed={5}\r\n                              marginPagesDisplayed={2}\r\n                              onPageChange={this.goToPage.bind(this)}\r\n                          />\r\n                      </div>}\r\n\r\n              </div>\r\n    )\r\n  }\r\n}\r\n\r\n// props type checking\r\nResultsList.propTypes = {\r\n  onResults: PropTypes.string\r\n}\r\n\r\nexport default ResultsList\r\n","import React from 'react'\r\nimport ResultsList from './results-list.js'\r\n\r\n// SearchApp acts as parent to all components in the movies search app\r\n// Probably unnecessary but allows us to call \"SearchApp\"\r\n// instead of \"ResultsList\" which is more intuitive.\r\nfunction SearchApp () {\r\n  return (\r\n          <div>\r\n              <ResultsList />\r\n          </div>\r\n  )\r\n}\r\n\r\nexport default SearchApp\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport SearchApp from './search-app.js'\r\nimport './style.css'\r\n\r\n// render app to DOM\r\nReactDOM.render(<SearchApp />, document.getElementById('root'))\r\n"],"sourceRoot":""}